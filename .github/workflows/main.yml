name: CI/CD Pipeline

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  lint:
    name: Python Lint (black, isort)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install linters
        run: |
          pip install --upgrade pip
          pip install black isort
      - name: Run black
        run: black --check .
      - name: Run isort
        run: isort . --check-only

  build:
    name: Docker Compose Build
    runs-on: docker
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Copy env files
        run: |
          cp .env.example .env
          cp .env.frontend.example .env.frontend
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and Run containers
        run: |
          docker-compose -f docker-compose.yml down
          docker-compose -f docker-compose.yml up -d --build

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy via SSH
        run: |
          ssh root@${{ secrets.SSH_HOST }} "
            cd ${{ secrets.DEPLOY_PATH }} &&
            git pull &&
            docker-compose down --remove-orphans &&
            docker-compose up -d --build
          "
